load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Load the Rust rules
http_archive(
    name = "rules_rust",
    # strip_prefix = "rules_rust-0.54.1",
    # integrity = "sha256-72SWmp+smWgg7eR3yHTBXv0G10i1uaA3LaDmSTT4KYk=",
    # urls = ["https://github.com/bazelbuild/rules_rust/archive/0.54.1.tar.gz"],

    # the 'release_artefact' version.
    # this version allows crate_universe_dependencies to work since it will have private/urls.bzl populated with cargo-bazel artefact download urls
    integrity = "sha256-r09Wyq5QqZpov845sUG1Cd1oVIyCBLmKt6HK/JTVuwI=",
    urls = ["https://github.com/bazelbuild/rules_rust/releases/download/0.54.1/rules_rust-v0.54.1.tar.gz"],

)

load("@rules_rust//rust:repositories.bzl", "rust_repositories")

# Fetch the necessary repositories
rust_repositories()

# Set up the Rust toolchain
load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

rust_register_toolchains(
    edition = "2018",
    versions = [
        # note: when we switched to a release artefact version, 1.82.0 was downloaded
        "1.83.1",  # if we did not pass a non-nightly version, this would be *required*: --@rules_rust//rust/toolchain/channel=nightly
        "nightly/2024-10-17",
    ],
)

# TODO: can we replace this? https://www.tweag.io/blog/2023-07-27-building-rust-workspace-with-bazel/
# Some rules are added below for cargo2junit.
_LIBC_BUILD_FILE_CONTENT = """\
load("@rules_rust//rust:defs.bzl", "rust_library")

rust_library(
    name = "libc",
    srcs = glob(["src/**/*.rs"]),
    edition = "2015",
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    visibility = ["//visibility:public"],
)
"""

http_archive(
    name = "libc",
    build_file_content = _LIBC_BUILD_FILE_CONTENT,
    sha256 = "1ac4c2ac6ed5a8fb9020c166bc63316205f1dc78d4b964ad31f4f21eb73f0c6d",
    strip_prefix = "libc-0.2.20",
    urls = [
        "https://mirror.bazel.build/github.com/rust-lang/libc/archive/0.2.20.zip",
        "https://github.com/rust-lang/libc/archive/0.2.20.zip",
    ],
)


# crate_universe stuff to pull in crates we need.
load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies()  # usually would be no args; but bootstrap=True might be needed if rules_rust is "not a release artifact"; it does not actually work however

load("@rules_rust//crate_universe:defs.bzl", "crates_repository")

# note: we create one for junitification, but we could have one for all crates in repo
crates_repository(
    name = "crate_index_junitify",
    cargo_lockfile = "//junitify:Cargo.lock",  # single lock of the workspace
    lockfile = "//junitify:cargo-bazel-lock.json",
    manifests = [
        # list of all tomls in the workspace
        "//junitify:Cargo.toml",
    ],
    generate_binaries = True,  # generate binaries for all; alternative: annotations = { "cargo2junit": [crate.annotation(gen_binaries=True)] } -- or it can take a string list in gen_binaries with binaries that should be generated
    rust_version = "nightly",  # required so -Z bindeps can be passed -- needed at least for CARGO_BAZEL_REPIN=true
)

load("@crate_index_junitify//:defs.bzl", "crate_repositories")

crate_repositories()

# next:
# cd junitify && touch cargo-bazel-lock.json BUILD.bazel
# CARGO_BAZEL_REPIN=1 bazel sync --only=crate_index_junitify  # <-- run every time deps are changed
#
# unfortunately:
# Error in fail: No generator URL was found either in the `CARGO_BAZEL_GENERATOR_URL` environment variable or for the `x86_64-unknown-linux-gnu` triple in the `generator_urls` attribute
# ERROR: no such package '@@crate_index_junitify//': No generator URL was found either in the `CARGO_BAZEL_GENERATOR_URL` environment variable or for the `x86_64-unknown-linux-gnu` triple in the `generator_urls` attribute
#
# "Note that if the current version of rules_rust is not a release artifact, you may need to set additional flags such as bootstrap = True on the crate_universe_dependencies call above or crates_repository::generator_urls in uses of crates_repository.
#

# end crate_universe stuff

# Toolchains for remote execution via buildbuddy.
http_archive(
    name = "io_buildbuddy_buildbuddy_toolchain",
    sha256 = "1cab6ef3ae9b4211ab9d57826edd4bbc34e5b9e5cb1927c97f0788d8e7ad0442",
    strip_prefix = "buildbuddy-toolchain-b043878a82f266fd78369b794a105b57dc0b2600",
    urls = ["https://github.com/buildbuddy-io/buildbuddy-toolchain/archive/b043878a82f266fd78369b794a105b57dc0b2600.tar.gz"],
)

load("@io_buildbuddy_buildbuddy_toolchain//:deps.bzl", "buildbuddy_deps")

buildbuddy_deps()

load("@io_buildbuddy_buildbuddy_toolchain//:rules.bzl", "UBUNTU20_04_IMAGE", "buildbuddy")

buildbuddy(
    name = "buildbuddy_toolchain",
    container_image = UBUNTU20_04_IMAGE,
)
